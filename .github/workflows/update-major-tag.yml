name: Update v<Major> Tag
run-name: |
  Update major tag: ${{ github.event_name }}${{ github.event_name == 'push' && (github.event.created && ' created' || ' deleted') || '' }} ${{ github.event.ref }}

on:
  delete:

  push:
    tags:
      - '**'

  workflow_call:

env:
  CONTINUE_WORKFLOW: 1
  TAG_CREATED: ${{ (github.event_name != 'push' && github.event_name != 'delete' || github.event.created) && '1' || '' }}

jobs:
  update-tag:
    if: ${{ contains(github.event.ref, '.') && (github.event_name != 'delete' || github.event.ref_type == 'tag') }}
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    timeout-minutes: 2

    steps:
      - name: Extract Major Tag
        id: get-major
        run: |
          tag=${{ github.event.ref }}
          if ${{ github.event_name == 'push' }} ; then
            tag=${tag#refs/tags/}
          fi
          if [[ $tag == */* ]] ; then
            tag_path=${tag%/*}/
          fi

          version=${tag##*/}
          if [[ $version != *.* ]] ; then
            echo 'Stopping workflow. Updated tag is a major tag.'
            echo 'CONTINUE_WORKFLOW=' >> "$GITHUB_ENV"
            exit 0
          elif [[ ! $version =~ ^v[0-9]+\.[0-9] ]] ; then
            echo 'Invalid version "'"$version"'".'
            exit 1
          fi

          major_tag="$tag_path${version%%.*}"

          echo "tag_path=$tag_path" >> "$GITHUB_OUTPUT"
          echo "major_tag=$major_tag" >> "$GITHUB_OUTPUT"
          cat << EOF >> "$GITHUB_STEP_SUMMARY"
          ## Extracted Data
          - Major Tag: \`$major_tag\`
          - Tag: \`$tag\`
          - Tag Path: $([ -z "$tag_path" ] && echo 'None' || echo "\`$tag_path\`")
          - Version: \`$version\`

          ## Operation Logs
          EOF

          if ${{ github.event_name == 'push' }} ; then
            if ${{ !startsWith(github.event.ref, 'refs/tags/') }} ; then
              echo 'Stopping workflow. `${{ github.event.ref }}` is not a tag.'
              echo 'CONTINUE_WORKFLOW=' >> "$GITHUB_ENV"
              exit 0
            fi
          fi

      - name: Checkout Repository
        if: ${{ env.CONTINUE_WORKFLOW }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Upgrade Major Tag
        if: ${{ env.CONTINUE_WORKFLOW && env.TAG_CREATED }}
        run: |
          latest_tag_under_major="$(git tag -l '${{ steps.get-major.outputs.major_tag }}.*' | sort -V | tail -1)"

          if [ -z "$latest_tag_under_major" ] ; then
            echo '- Exiting. No tags under major.' | tee -a $GITHUB_STEP_SUMMARY
            exit 1
          fi

          major_tag_rev="$(git rev-list -1 "refs/tags/${{ steps.get-major.outputs.major_tag }}" || true)"
          latest_rev_under_major="$(git rev-list -1 "refs/tags/$latest_tag_under_major")"

          if [ -n major_tag_rev ] && [ "$major_tag_rev" == "$latest_rev_under_major" ] ; then
            echo '- Short-circuiting. Major tag `${{ steps.get-major.outputs.major_tag }}`(`'"$major_tag_rev"'`) equals latest tag under major version `'"$latest_tag_under_major"'`(`'"$latest_rev_under_major"'`).' | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi

          echo '- Upgrading major tag `${{ steps.get-major.outputs.major_tag }}`('"$([ -z "$major_tag_rev" ] && echo 'N/A' || echo "\`$major_tag_rev\`")"') to `'"$latest_tag_under_major"'`(`'"$latest_rev_under_major"'`)' | tee -a "$GITHUB_STEP_SUMMARY"

          git tag -f "${{ steps.get-major.outputs.major_tag }}" "$latest_tag_under_major"
          git push -f origin "${{ steps.get-major.outputs.major_tag }}"

      - name: Downgrade Major Tag
        if: ${{ env.CONTINUE_WORKFLOW && !env.TAG_CREATED }}
        run: |
          major_tag_rev="$(git rev-list -1 "refs/tags/${{ steps.get-major.outputs.major_tag }}" || true)"
          if [ -z $major_tag_rev ] ; then
            echo '- Short-circuiting. Major tag doesn'"'"'t exist.' | tee -a "$GITHUB_STEP_SUMMARY"
            exit 0
          fi

          tags_under_major="$(git tag -l '${{ steps.get-major.outputs.major_tag }}.*')"

          if [ -z "$tags_under_major" ] ; then
            echo '- Deleting major tag. Tag deletion resulted in no tags under major version.' | tee -a "$GITHUB_STEP_SUMMARY"
            git push origin :refs/tags/${{ steps.get-major.outputs.major_tag }}
          else
            latest_tag_under_major=$(echo "$tags_under_major" | sort -V | tail -1)
            latest_rev_under_major="$(git rev-list -1 "refs/tags/$latest_tag_under_major")"

            if [ "$major_tag_rev" == "$latest_rev_under_major" ] ; then
              echo '- Short-circuiting. Major tag `${{ steps.get-major.outputs.major_tag }}`(`'"$major_tag_rev"'`) equals latest tag under major version `'"$latest_tag_under_major"'`(`'"$latest_rev_under_major"'`).' | tee -a "$GITHUB_STEP_SUMMARY"
              exit 0
            fi

            echo '- Downgrading major tag `${{ steps.get-major.outputs.major_tag }}`(`'"$major_tag_rev"'`) to `'"$latest_tag_under_major"'`(`'"$latest_rev_under_major"'`)' | tee -a "$GITHUB_STEP_SUMMARY"

            git tag -f ${{ steps.get-major.outputs.major_tag }} $latest_tag_under_major
            git push -f origin ${{ steps.get-major.outputs.major_tag }}
          fi
